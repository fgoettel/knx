[tool.poetry]
name = "logger"
version = "0.4.3" # Also update in logger/__init__.py AND projects
description = "Log knx messages"
authors = ["Fabian GÃ¶ttel <fabian.goettel@gmail.com>"]

[tool.poetry.dependencies]
python = "3.12.*"
SQLAlchemy = "*"
mypy = "*"
nox = "*"
nox-poetry = "*"
pgsql = "*"
psycopg2-binary = { version = "*", optional = true }
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-mock = "*"
pytest-profiling = "*"
ruff = "*"
sqlalchemy-stubs = "*"
xknx = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.12"
exclude = [
    "^noxfile\\.py",
]
show_error_codes = true

[[tool.mypy.overrides]]
module = "logger.orm"
ignore_errors = true

[tool.pytest.ini_options]
testpaths = [
    "test",
]
asyncio_mode = "auto"

[tool.ruff]
target-version = "py312"
line-length = 200

[tool.ruff.lint]
select = [ "ALL" ]

# TODO: Either make these more specific or fix
ignore = [
    "ANN002", # Missing type annotation for *args
    "ANN003", # Missing type annotation for **kwargs
    "ANN101", # Missing type annotation for self
    "ANN401", # Dynamically types allowed
    "ASYNC230", # Async functions should not call `open`, `time.sleep`, or `subprocess` methods
    "BLE001", # Do not catch blind exception
    "COM812", # Incompatibility with formatting
    "D203",   # one blank line before class
    "D213",   # mulit-line-summary-second-line
    "DTZ001", # The use without tzinfo argument is not allowed
    "DTZ003", # The use without tzinfo argument is not allowed
    "DTZ005", # The use without tzinfo argument is not allowed
    "FIX002", # Line contains TODO
    "ISC001", # Incompatibility with formatting
    "PGH003", # Use specific rule codes when ignore type issues
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments to function call
    "PLR0915", # Too many statements
    "S311",   # Standard pseudo-random generators are not suitable for cryptographic purpose
    "SIM108", # Use ternary operator
    "TCH002", # Move import into a type checking block
    "TCH003", # Move import into a type checking block
    "TD002",  # Missing author in TODO
    "TD003",  # Missing issue link on the line following this TODO
    "TRY401", # Redundant exception object
]
mccabe.max-complexity = 30 # TODO: shrink to ~10

[tool.ruff.lint.per-file-ignores]
"test/*.py" = ["S101"]

[tool.coverage]
source = ["logger"]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "if __name__ == .__main__.:",
    "pytest.main([.-x.])",
]
omit = ["logger/codegen"]