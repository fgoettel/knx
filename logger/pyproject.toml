[tool.poetry]
name = "logger"
version = "0.4.1" # Also update in logger/__init__.py AND projects
description = "Log knx messages"
authors = ["Fabian GÃ¶ttel <fabian.goettel@gmail.com>"]

[tool.poetry.dependencies]
python = "3.11"
SQLAlchemy = "*"
xknx = "*"
psycopg2-binary = { version = "*", optional = true }

[tool.poetry.extras]
pgsql = ["psycopg2-binary"]

[tool.poetry.dev-dependencies]
black = "*"
flake8 = "*"
flake8-annotations = "*"
flake8-bandit = "*"
flake8-black = "*"
flake8-bugbear = "*"
flake8-docstrings = "*"
flake8-isort = "*"
isort = "*"
mypy = "*"
nox-poetry = "*"
pylint = "*"
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-mock = "*"
pytest-profiling = "*"
safety = "*"
sqlalchemy-stubs = "*"
toml = "*"
darglint = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.11"

[tool.isort]
profile = "black"

[[tool.mypy.overrides]]
module = "logger.orm"
ignore_errors = true

[tool.pytest.ini_options]
testpaths = [
    "test",
]
asyncio_mode = "auto"


[tool.darglint]
docstring_style="numpy"

[tool.coverage]
source = ["logger"]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "if __name__ == .__main__.:",
    "pytest.main([.-x.])",
]
omit = ["logger/codegen"]